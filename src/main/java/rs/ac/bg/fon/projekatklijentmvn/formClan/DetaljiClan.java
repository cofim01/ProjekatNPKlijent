package rs.ac.bg.fon.projekatklijentmvn.formClan;

import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.awt.Frame;
import java.io.File;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import rs.ac.bg.fon.projekatklijentmvn.kontroler.KlijentKontroler;
import rs.ac.bg.fon.projekatzajednickimvn.domen.Clan;
import rs.ac.bg.fon.projekatzajednickimvn.domen.Zaduzenje;

/**
 *
 * @author MRDAK-PC
 */
public class DetaljiClan extends javax.swing.JDialog {

    private Clan clan;
    private JTable tabelaClanovi;
    private ArrayList<Zaduzenje> novaZaduzenja = new ArrayList<>();

    public DetaljiClan(java.awt.Frame parent, boolean modal, Clan clan, JTable tabelaClanovi) {
        super(parent, modal);
        initComponents();
        this.clan = clan;
        this.tabelaClanovi = tabelaClanovi;
        pripremiFormu();
        setTitle("Podaci o članu");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        txtPrezime = new javax.swing.JTextField();
        txtAdresa = new javax.swing.JTextField();
        txtBrojTelefona = new javax.swing.JTextField();
        txtKreirao = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        btnZaduzenja = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnSacuvaj = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Član", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        jLabel1.setText("Ime:");

        jLabel2.setText("Prezime:");

        jLabel3.setText("Adresa:");

        jLabel4.setText("Broj telefona:");

        jLabel5.setText("Kreirao korisnik:");

        txtIme.setEnabled(false);

        txtPrezime.setEnabled(false);

        txtAdresa.setEnabled(false);

        txtBrojTelefona.setEnabled(false);

        txtKreirao.setEnabled(false);

        jLabel6.setText("ID člana:");

        txtId.setEnabled(false);

        btnZaduzenja.setText("Učitaj zaduženja");
        btnZaduzenja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZaduzenjaActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnSacuvaj.setText("Sačuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        jLabel7.setText("Email:");

        txtEmail.setEnabled(false);

        jLabel8.setText("Status:");

        txtStatus.setEnabled(false);

        jButton1.setText("Preuzmi zadženja člana");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnZaduzenja, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnIzmeni, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSacuvaj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtKreirao, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtIme)
                                .addComponent(txtPrezime, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                                .addComponent(txtAdresa, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                                .addComponent(txtBrojTelefona, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                                .addComponent(txtId)
                                .addComponent(txtEmail)
                                .addComponent(txtStatus))))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAdresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtBrojTelefona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKreirao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnZaduzenja)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnIzmeni)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSacuvaj)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        // TODO add your handling code here:
        btnIzmeni.setEnabled(false);
        btnSacuvaj.setVisible(true);
        txtAdresa.setEnabled(true);
        txtEmail.setEnabled(true);
        txtStatus.setEnabled(true);
        txtBrojTelefona.setEnabled(true);

    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        // TODO add your handling code here:
        try {
            if (txtAdresa.getText().isEmpty() || txtBrojTelefona.getText().isEmpty() || txtEmail.getText().isEmpty() || txtStatus.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Sva polja su obavezna.");
                return;
            }
            if (!txtStatus.getText().equals("Aktivan") && !txtStatus.getText().equals("Neaktivan")) {
                JOptionPane.showMessageDialog(this, "Dozvoljene vrednosti za polje status su 'Aktivan' i 'Neaktivan' ");
                return;
            }
            if (txtStatus.getText().equals("Neaktivan")) {
                Zaduzenje z = new Zaduzenje();
                z.setClan(clan);
                ArrayList<Zaduzenje> zaduzenja = KlijentKontroler.getInstanca().vratiSvaZaduzenja(z);
                for (Zaduzenje zaduzenje : zaduzenja) {
                    if (zaduzenje.getDatumRazduzenja() == null) {
                        JOptionPane.showMessageDialog(this, "Nije moguće promeniti status, član ima nerazdužene knjige");
                        return;
                    }
                }

            }
            Clan c = clan;
            c.setAdresa(txtAdresa.getText());
            c.setBrTelefona(txtBrojTelefona.getText());
            c.setEmail(txtEmail.getText());
            c.setStatus(txtStatus.getText());
            KlijentKontroler.getInstanca().izmeniClana(c);
            JOptionPane.showMessageDialog(this, "Sistem je zapamtio člana biblioteke.");
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti člana biblioteke," + e.getMessage());
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnZaduzenjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZaduzenjaActionPerformed
        // TODO add your handling code here:
        novaZaduzenja = new ArrayList<>();
        ZaduzenjaClana zaduzenjaFrm = new ZaduzenjaClana((Frame) this.getParent().getParent(), true, clan, novaZaduzenja);
        zaduzenjaFrm.setVisible(true);
        if (novaZaduzenja.size() > 0) {
            Thread emailThread = new Thread(() -> {
                posaljiMejl();
            });
            emailThread.start();
        }
    }//GEN-LAST:event_btnZaduzenjaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        com.itextpdf.text.Document document = new com.itextpdf.text.Document();
        com.itextpdf.text.Font f = FontFactory.getFont("DejaVu Sans", BaseFont.IDENTITY_H, BaseFont.EMBEDDED, 12);
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        try {
            String filePath = System.getProperty("user.home") + File.separator + "Downloads" + File.separator + "Zaduzenja_" + clan.getIme() + "_" + clan.getPrezime() + ".pdf";
            PdfWriter.getInstance(document, new FileOutputStream(filePath));

            document.open();
            String ime = clan.getIme().replaceAll("[čć]", "c").replaceAll("[ČĆ]", "C");
            String prezime = clan.getPrezime().replaceAll("[čć]", "c").replaceAll("[ČĆ]", "C");
            document.add(new Paragraph("Zaduzenja clana: " + ime + " " + prezime, f));
            document.add(new Paragraph(" "));

            // Stvaranje tabele za prikaz datuma
            PdfPTable table = new PdfPTable(5); // 5 kolona
            table.setWidthPercentage(100); // Širina tabele je 100% širine dokumenta

            // Postavljanje naziva kolona
            String[] columnNames = {"ID zaduženja", "Datum zaduženja", "Datum razduženja", "Broj primerka", "Naziv knjige"};
            for (String columnName : columnNames) {
                PdfPCell headerCell = new PdfPCell();
                headerCell.addElement(new Phrase(columnName, f));
                headerCell.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_CENTER);
                table.addCell(headerCell);
            }

            ArrayList<Zaduzenje> zaduzenja = vratiZaduzenjaClana();
            for (Zaduzenje zaduzenje : zaduzenja) {
                // Kreiranje reda za svako zaduženje
                PdfPCell cell;

                // ID zaduženja
                cell = new PdfPCell(new Phrase(String.valueOf(zaduzenje.getBrZaduzenja()), f));
                cell.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_CENTER);
                table.addCell(cell);

                // Datum zaduženja
                cell = new PdfPCell(new Phrase(sdf.format(zaduzenje.getDatumZaduzenja()), f));
                cell.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_CENTER);
                table.addCell(cell);

                // Datum razduženja
                cell = new PdfPCell(new Phrase(zaduzenje.getDatumRazduzenja() != null ? sdf.format(zaduzenje.getDatumRazduzenja()) : "", f));
                cell.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_CENTER);
                table.addCell(cell);

                // Broj primerka
                cell = new PdfPCell(new Phrase(String.valueOf(zaduzenje.getPrimerak().getPrimerakId()), f));
                cell.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_CENTER);
                table.addCell(cell);

                // Naziv knjige
                cell = new PdfPCell(new Phrase(zaduzenje.getPrimerak().getKnjiga().getNaziv().replaceAll("[čć]", "c").replaceAll("[ČĆ]", "C"), f));
                cell.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_CENTER);
                table.addCell(cell);
            }

            document.add(table);

            document.close();

            JOptionPane.showMessageDialog(this, "PDF datoteka je uspešno generisana na sledećoj lokaciji: " + filePath);

            File file = new File(filePath);
            Desktop desktop = Desktop.getDesktop();
            if (file.exists()) {
                desktop.open(file);
            } else {
                JOptionPane.showMessageDialog(this, "PDF datoteka ne postoji na odabranoj lokaciji.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Došlo je do greške prilikom generisanja PDF-a: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JButton btnZaduzenja;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtAdresa;
    private javax.swing.JTextField txtBrojTelefona;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtKreirao;
    private javax.swing.JTextField txtPrezime;
    private javax.swing.JTextField txtStatus;
    // End of variables declaration//GEN-END:variables

    private void pripremiFormu() {
        txtId.setText(clan.getClanId() + "");
        txtIme.setText(clan.getIme());
        txtPrezime.setText(clan.getPrezime());
        txtAdresa.setText(clan.getAdresa());
        txtBrojTelefona.setText(clan.getBrTelefona());
        txtEmail.setText(clan.getEmail());
        txtStatus.setText(clan.getStatus());
        txtKreirao.setText(clan.getKorisnik().getIme() + " " + clan.getKorisnik().getPrezime());
        btnSacuvaj.setVisible(false);

    }

    private ArrayList<Zaduzenje> vratiZaduzenjaClana() {
        ArrayList<Zaduzenje> lista = new ArrayList<>();
        try {
            Zaduzenje z = new Zaduzenje();
            z.setClan(clan);
            lista = KlijentKontroler.getInstanca().vratiSvaZaduzenja(z);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return lista;
    }

    private void posaljiMejl() {
        String from = "fmrdak@gmail.com";
        String host = "smtp.gmail.com";
        String username = "fmrdak@gmail.com";
        String password = "gmdu lccp rdxw uhlr";
        String to = novaZaduzenja.get(0).getClan().getEmail();
        String ime=novaZaduzenja.get(0).getClan().getIme();

        Properties properties = System.getProperties();
        properties.put("mail.smtp.host", host);
        properties.put("mail.smtp.port", "465");
        properties.put("mail.smtp.ssl.enable", "true");
        properties.put("mail.smtp.auth", "true");

        Session session = Session.getInstance(properties, new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
        });

        try {
            MimeMessage message = new MimeMessage(session);
            message.setFrom(new InternetAddress(from));
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
            message.setSubject("Zaduzenje knjiga - Obavestenje");

            StringBuilder emailBody = new StringBuilder();
            emailBody.append("<html><body>Postovani/a "+ime+",");
            emailBody.append("<br><br><br>");
            emailBody.append("Zaduzili ste sledece knjige:");
            emailBody.append("<br>");
            emailBody.append("<table border=\"1\">");
            emailBody.append("<tr><th>Broj primerka</th><th>Datum zaduzenja</th><th>Naziv knjige</th><th>Rok za vracanje</th></tr>");

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Calendar cal = Calendar.getInstance();

            for (Zaduzenje zaduzenje : novaZaduzenja) {
                String nazivKnjige = zaduzenje.getPrimerak().getKnjiga().getNaziv();
                Date rokZaVracanje = zaduzenje.getDatumZaduzenja();
                cal.setTime(rokZaVracanje);
                cal.add(Calendar.DATE, 10); 
                rokZaVracanje = cal.getTime();

                emailBody.append("<tr>");
                emailBody.append("<td>").append(zaduzenje.getPrimerak().getPrimerakId()).append("</td>");
                emailBody.append("<td>").append(sdf.format(zaduzenje.getDatumZaduzenja())).append("</td>");
                emailBody.append("<td>").append(nazivKnjige).append("</td>");

                
                emailBody.append("<td><font color=\"red\">").append(sdf.format(rokZaVracanje)).append("</font></td>");

                emailBody.append("</tr>");
            }

            emailBody.append("</table>");
            emailBody.append("Vasa biblioteka.");
            emailBody.append("</body></html>");

            message.setContent(emailBody.toString(), "text/html");

            Transport.send(message);
        } catch (MessagingException mex) {
            mex.printStackTrace();
        }
    }

}
