package rs.ac.bg.fon.projekatklijentmvn.formClan;


import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import rs.ac.bg.fon.projekatklijentmvn.kontroler.KlijentKontroler;
import rs.ac.bg.fon.projekatklijentmvn.modeli.ModelTabeleZaduzenja;
import rs.ac.bg.fon.projekatklijentmvn.sesija.Sesija;
import rs.ac.bg.fon.projekatzajednickimvn.domen.Clan;
import rs.ac.bg.fon.projekatzajednickimvn.domen.Knjiga;
import rs.ac.bg.fon.projekatzajednickimvn.domen.PrimerakKnjige;
import rs.ac.bg.fon.projekatzajednickimvn.domen.Zaduzenje;


/**
 *
 * @author MRDAK-PC
 */
public class ZaduzenjaClana extends javax.swing.JDialog {

    private Clan clan;
    private SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
    private ArrayList<Zaduzenje> novaZaduzenja;

    public ZaduzenjaClana(java.awt.Frame parent, boolean modal, Clan clan, ArrayList<Zaduzenje> novaZaduzenja) {
        super(parent, modal);
        initComponents();
        this.clan = clan;
        this.novaZaduzenja=novaZaduzenja;
        pripremiFormu();
        setTitle("Zaduženja knjiga");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIme = new javax.swing.JLabel();
        lblPrezime = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cbKnjige = new javax.swing.JComboBox();
        btnDodajZaduzenje = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaZaduzenja = new javax.swing.JTable();
        btnRazduziKnjigu = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtDatumZaduzenja = new javax.swing.JTextField();
        cbSifraPrimerka = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btrnFiltriraj = new javax.swing.JButton();
        btnPrikaziSve = new javax.swing.JButton();
        dateOd = new com.toedter.calendar.JDateChooser();
        dateDo = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblIme.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblIme.setText("Ime:");

        lblPrezime.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPrezime.setText("Prezime:");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Zaduženja člana", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Knjiga:");

        cbKnjige.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbKnjige.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbKnjigeItemStateChanged(evt);
            }
        });

        btnDodajZaduzenje.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDodajZaduzenje.setText("Sačuvaj zaduženje");
        btnDodajZaduzenje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajZaduzenjeActionPerformed(evt);
            }
        });

        tabelaZaduzenja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaZaduzenja);

        btnRazduziKnjigu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRazduziKnjigu.setText("Razduži knjigu");
        btnRazduziKnjigu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRazduziKnjiguActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Datum zaduženja:");

        cbSifraPrimerka.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Sifra primerka:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Filter"));

        jLabel3.setText("Datum od:");

        jLabel5.setText("Datum do:");

        btrnFiltriraj.setText("Filtriraj zaduženja");
        btrnFiltriraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btrnFiltrirajActionPerformed(evt);
            }
        });

        btnPrikaziSve.setText("Prikaži sve");
        btnPrikaziSve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrikaziSveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateDo, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateOd, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btrnFiltriraj, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrikaziSve, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPrikaziSve)
                    .addComponent(dateOd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btrnFiltriraj)
                    .addComponent(dateDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnRazduziKnjigu, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbSifraPrimerka, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDatumZaduzenja, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnDodajZaduzenje, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                            .addComponent(cbKnjige, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(24, 24, 24))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cbKnjige)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSifraPrimerka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDatumZaduzenja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(btnDodajZaduzenje)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(btnRazduziKnjigu)
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(lblIme, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(136, 136, 136))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIme)
                    .addComponent(lblPrezime))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajZaduzenjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajZaduzenjeActionPerformed
        // TODO add your handling code here:

        if (cbKnjige.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Niste izabrali knjigu koju želite da zadužite");
            return;
        }
        if (txtDatumZaduzenja.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Datum zaduženja je obavezno polje.");
            return;
        }
        Date datumZaduzenja;
        try {
            datumZaduzenja = sdf.parse(txtDatumZaduzenja.getText());
            if (datumZaduzenja.after(new Date())) {
                JOptionPane.showMessageDialog(this, "Datum zaduženja ne može biti u budućnosti");
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Datum zaduženja mora biti u formatu dd.MM.yyyy");
            return;
        }
        DefaultComboBoxModel<Knjiga> modelKnjige = (DefaultComboBoxModel<Knjiga>) cbKnjige.getModel();
        Knjiga k = (Knjiga) modelKnjige.getSelectedItem();

        Zaduzenje zaduzenje = new Zaduzenje();
        zaduzenje.setDatumZaduzenja(datumZaduzenja);

        DefaultComboBoxModel<PrimerakKnjige> modelPrimerci = (DefaultComboBoxModel<PrimerakKnjige>) cbSifraPrimerka.getModel();
        PrimerakKnjige pk = (PrimerakKnjige) modelPrimerci.getSelectedItem();
        pk.setStatus("Zaduzena");
        zaduzenje.setPrimerak(pk);

        zaduzenje.setKorisnik(Sesija.getInstanca().getAdmin());
        zaduzenje.setClan(clan);

        try {
            KlijentKontroler.getInstanca().zaduziKnjigu(zaduzenje);
            JOptionPane.showMessageDialog(this, "Sistem je zapamtio zaduženje");
            ucitajZaduzenja();
            novaZaduzenja.add(zaduzenje);
            pripremiFormuZaNoviUnos();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti zaduženje.");
        }
    }//GEN-LAST:event_btnDodajZaduzenjeActionPerformed

    private void btnRazduziKnjiguActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRazduziKnjiguActionPerformed

        int index = tabelaZaduzenja.getSelectedRow();
        if (index < 0) {
            JOptionPane.showMessageDialog(this, "Niste selektovali knjigu koju želite da razdužite");
            return;
        }
        ModelTabeleZaduzenja model = (ModelTabeleZaduzenja) tabelaZaduzenja.getModel();
        Zaduzenje z = model.vratiZaduzenje(index);
        if (z.getDatumRazduzenja() != null) {
            JOptionPane.showMessageDialog(this, "Izabrana knjiga je već razdužena");
            return;
        }
        Date datumR = new Date();
        z.setDatumRazduzenja(datumR);
        PrimerakKnjige pk = z.getPrimerak();
        pk.setStatus("Dostupna");
        z.setPrimerak(pk);
        try {
            KlijentKontroler.getInstanca().razduziKnjigu(z);
            JOptionPane.showMessageDialog(this, "Sistem je razdužio izabranu knjigu.");
            ucitajZaduzenja();
            PopuniComboBoxPrimerci();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da razduži izabranu knjigu," + e.getMessage());
        }

    }//GEN-LAST:event_btnRazduziKnjiguActionPerformed

    private void cbKnjigeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbKnjigeItemStateChanged
        // TODO add your handling code here:
        PopuniComboBoxPrimerci();

    }//GEN-LAST:event_cbKnjigeItemStateChanged

    private void btrnFiltrirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btrnFiltrirajActionPerformed
        try {
            Date datumOd = dateOd.getDate();
            Date datumDo = dateDo.getDate();
            if (datumOd == null || datumDo == null) {
                JOptionPane.showMessageDialog(this, "Morate uneti oba datuma za filtriranje zaduzenja.");
                return;
            }
            ModelTabeleZaduzenja model = (ModelTabeleZaduzenja) tabelaZaduzenja.getModel();
            Zaduzenje z = new Zaduzenje();
            z.setClan(clan);
            z.setDatumOdFilter(datumOd);
            z.setDatumDoFilter(datumDo);
            ArrayList<Zaduzenje> zaduzenja = KlijentKontroler.getInstanca().vratiSvaZaduzenja(z);
            model.setZaduzenja(zaduzenja);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btrnFiltrirajActionPerformed

    private void btnPrikaziSveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrikaziSveActionPerformed
        // TODO add your handling code here:
        ucitajZaduzenja();
    }//GEN-LAST:event_btnPrikaziSveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajZaduzenje;
    private javax.swing.JButton btnPrikaziSve;
    private javax.swing.JButton btnRazduziKnjigu;
    private javax.swing.JButton btrnFiltriraj;
    private javax.swing.JComboBox cbKnjige;
    private javax.swing.JComboBox cbSifraPrimerka;
    private com.toedter.calendar.JDateChooser dateDo;
    private com.toedter.calendar.JDateChooser dateOd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblIme;
    private javax.swing.JLabel lblPrezime;
    private javax.swing.JTable tabelaZaduzenja;
    private javax.swing.JTextField txtDatumZaduzenja;
    // End of variables declaration//GEN-END:variables

    private void pripremiFormu() {
        try {
            lblIme.setText("Ime: " + clan.getIme());
            lblPrezime.setText("Prezime: " + clan.getPrezime());
            Knjiga k = new Knjiga();
            ArrayList<Knjiga> knjige = KlijentKontroler.getInstanca().vratiSveKnjige(k);
            DefaultComboBoxModel<Knjiga> modelCbKnjige = new DefaultComboBoxModel(knjige.toArray());

            cbKnjige.setModel(modelCbKnjige);
            AutoCompleteDecorator.decorate(cbKnjige);

            Date trenutniDatum = new Date();
            txtDatumZaduzenja.setText(sdf.format(trenutniDatum));
            ucitajZaduzenja();
            PopuniComboBoxPrimerci();

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void pripremiFormuZaNoviUnos() {
        Date danasnjiDatum = new Date();
        txtDatumZaduzenja.setText(sdf.format(danasnjiDatum));
        PopuniComboBoxPrimerci();

    }

    private void PopuniComboBoxPrimerci() {
        try {

            DefaultComboBoxModel<Knjiga> modelKnjige = (DefaultComboBoxModel<Knjiga>) cbKnjige.getModel();
            Knjiga k = (Knjiga) modelKnjige.getSelectedItem();

            PrimerakKnjige pk = new PrimerakKnjige();
            pk.setKnjiga(k);
            ArrayList<PrimerakKnjige> primerci = KlijentKontroler.getInstanca().vratiSvePrimerke(pk);
            ArrayList<PrimerakKnjige> slobodniPrimerci = new ArrayList<>();
            for (PrimerakKnjige primerak : primerci) {
                if (primerak.getStatus().equals("Dostupna")) {
                    slobodniPrimerci.add(primerak);
                }
            }
            if (slobodniPrimerci.size() > 0) {
                DefaultComboBoxModel<PrimerakKnjige> model = new DefaultComboBoxModel(slobodniPrimerci.toArray());
                cbSifraPrimerka.setModel(model);
                cbSifraPrimerka.setEnabled(true);
                btnDodajZaduzenje.setEnabled(true);

            } else {
                DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
                model.addElement("Nema raspolozivih primeraka");
                cbSifraPrimerka.setModel(model);
                cbSifraPrimerka.setEnabled(false);
                btnDodajZaduzenje.setEnabled(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void ucitajZaduzenja() {
        try {
            ModelTabeleZaduzenja modelTabele = new ModelTabeleZaduzenja();
            Zaduzenje z = new Zaduzenje();
            z.setClan(clan);
            ArrayList<Zaduzenje> zaduzenja = KlijentKontroler.getInstanca().vratiSvaZaduzenja(z);
            modelTabele.setZaduzenja(zaduzenja);
            tabelaZaduzenja.setModel(modelTabele);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }


}
